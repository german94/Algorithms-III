\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}Caballos salvajes}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Problema a resolver}{1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Problema con $n = 4$, $k = 3$, caballos en (1, 1), (2, 3), (4, 2). Soluci\'on: posici\IeC {\'o}n: (2, 3), cantidad de movimientos: 2.}}{1}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Problema con $n = 4$, $k = 4$, caballos en (1, 1), (2, 3), (4, 2), (3, 3). Soluci\IeC {\'o}n: posici\IeC {\'o}n (2, 3), cantidad de movimientos: 5.}}{1}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Problema con $n = 3$, $k = 3$, caballos en (1, 1), (2, 3), (3, 2). Soluci\IeC {\'o}n: posici\IeC {\'o}n (1, 1), cantidad de movimientos: 2.}}{2}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces El objetivo de esta imagen es analizar las instancias del problema para las cuales no existe soluci\IeC {\'o}n. El primer tablero de $n = 3$ podemos observar que tiene un caballo (o m\IeC {\'a}s) en la posici\IeC {\'o}n (3, 3). Si agreg\IeC {\'a}ramos un caballo en \textit  {otra} posici\IeC {\'o}n del tablero, ya no existir\IeC {\'\i }a soluci\IeC {\'o}n al problema. Esto sucede porque un caballo en la posici\IeC {\'o}n (2, 2), en un tablero de $n = 3$, no puede moverse hacia ninguna otra posici\IeC {\'o}n debido a la particularidad de su movimiento, el cual lo obliga a moverse siempre dos posiciones en la misma direcci\IeC {\'o}n. Algo similar pasa con los tableros de $n = 2$, donde tampoco se pueden mover los caballos por falta de posiciones en el tablero. Por lo tanto, los cuatro tableros de la derecha representan instancias del problema para las cuales no existe soluci\IeC {\'o}n.}}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Resoluci\IeC {\'o}n}{2}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces El caballo est\IeC {\'a} en $(3, 3)$ y puede ir a las posiciones $(1, 2), (1, 4), (2, 1), (2, 5), (4, 1), (5, 2), (4, 5), (5, 4)$}}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces En el primer tablero el caballo est\IeC {\'a} en su posici\IeC {\'o}n inicial y mostramos las posiciones posibles a las cuales puede saltar. En el segundo y tercer tablero el caballo ya salt\IeC {\'o} a una posici\IeC {\'o}n y, nuevamente mostramos las posici\IeC {\'o}nes a las cuales puede moverse desde ah\IeC {\'\i }. Marcamos con naranja las posiciones repetidas. Notemos que, en este caso si procesaramos la posici\IeC {\'o}n $(1, 4)$ dos veces, no ser\IeC {\'\i }a problema (a nivel funcional, s\IeC {\'\i } lo ser\IeC {\'\i }a a nivel performance) ya que de cualquier manera llegamos con dos movimientos. Ahora si proces\IeC {\'a}ramos la posici\IeC {\'o}n $(5, 4)$, s\IeC {\'\i } tendr\IeC {\'\i }amos problemas, ya que a esa posici\IeC {\'o}n se llega con 0 movimientos. Por lo tanto si incrementamos $v$ y se lo asignamos a la matriz en $(5, 4)$, estar\IeC {\'\i }amos diciendo que el caballo necesita 2 movimientos para llegar a la posici\IeC {\'o}n $(5, 4)$, cometiendo as\IeC {\'\i } un error. Es por eso que decidimos no procesar posiciones que ya est\IeC {\'a}n definidas en la matriz (que ya las procesamos en una iteraci\IeC {\'o}n anterior.}}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3}Demostraci\IeC {\'o}n de correctitud}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4}An\IeC {\'a}lisis de complejidad temporal}{6}}
